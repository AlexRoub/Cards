openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/cards:
    post:
      tags:
        - card-controller
      operationId: getCards
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 2147483647
        - name: sort
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            default:
              - creationDate
              - desc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestFilters'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCardResponse'
  /api/v1/cards/create:
    post:
      tags:
        - card-controller
      operationId: createCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
  /api/v1/auth/register:
    post:
      tags:
        - authentication-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/v1/auth/refresh-token:
    post:
      tags:
        - authentication-controller
      operationId: refreshToken
      responses:
        '200':
          description: OK
  /api/v1/auth/authenticate:
    post:
      tags:
        - authentication-controller
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /api/v1/cards/{cardId}:
    get:
      tags:
        - card-controller
      operationId: getCardById
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
    delete:
      tags:
        - card-controller
      operationId: deleteCard
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
    patch:
      tags:
        - card-controller
      operationId: updateCard
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
components:
  schemas:
    RequestFilters:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        status:
          type: string
        creationDate:
          type: string
          format: date
    CardResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        color:
          type: string
        status:
          type: string
        creationDate:
          type: string
          format: date
    PageCardResponse:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CardResponse'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    CreateCardRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        color:
          pattern: ^#[a-zA-Z0-9]{6}$
          type: string
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - MEMBER
            - ADMIN
    AuthenticationResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UpdateCardRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        color:
          pattern: ^#[a-zA-Z0-9]{6}$
          type: string
        status:
          type: string
          enum:
            - TO_DO
            - IN_PROGRESS
            - DONE
